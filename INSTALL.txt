The following guide is an example installation with an Ubuntu server 14.04
running the Call Manager, with the Asterisk PBX running on a diffent server.

On the Ubuntu server that will run the Call Manager:

$ sudo apt-get install nodejs mongodb git npm
$ git clone https://github.com/soporte-greencore/Gcs-Call-Manager.git
$ cd Gcs-Call-Manager/
$ npm install
$ sudo npm install -g grunt-cli

Change the IP of the PBX, as well as the user and password of you choosing.
$ vim config/config.js

                ami: {
                        host: 'manager-ip',
                        port: 'default',
                        username: 'user',
                        password: 'password'
                }

-------------------------------------------------------------------------------
On the PBX server with asterisk:

Add a Manager user to the Asterisk AMI. Remember to use the same user/password
as in the config/config.js configuration file.
$ sudo vim /etc/asterisk/manager.conf
[dev]
secret=password
deny=0.0.0.0/0.0.0.0
permit=manager-ip/255.255.255.255
read=system,call,log,verbose,command,agent,user
write=system,call,log,verbose,command,agent,user

Add chan_spy extension for monitor functionallity:
$ sudo vim /etc/asterisk/extensions_custom.conf

[app-chanspy-gcs]
exten => 556,1,Macro(user-callerid,)
exten => 556,n,Answer
exten => 556,n,Wait(1)
; "agent" variable comes in this way  =>  hint:extension@ext-local
; So is needed cut the variable to extract only extension number:
; From the fifth character, use X characters, where X means the size
; (number of digits) of extensions numbers. For example 4 digits
; could be extensions from 1000 to 9999
exten => 556,n,ChanSpy(SIP/${agent:5:4},q)
exten => 556,n,Hangup

[from-internal]
include => app-chanspy-gcs


Apply changes reloading asterisk configuration:
$ sudo asterisk -x 'core reload'

-------------------------------------------------------------------------------
Now you can visit the Call Manager to review the results:

http://manager-ip:3001/login
username: admin
password: greencoreAdmin

As a final step, secure the system by reviewing the created users and 
changing their passwords.

